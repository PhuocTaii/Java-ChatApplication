/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.btv.Admin.gui;

import com.btv.Admin.gui.components.GraphDrawer;
import com.btv.Admin.service.NewUserService;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JComboBox;
import javax.swing.Timer;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class NewUsers extends javax.swing.JPanel {
    
    private DefaultTableModel tableModel;
    private String[][] userList;
    private NewUserService newUserService;
    private GraphDrawer drawer;
    /**
     * Creates new form NewUsers
     * @throws java.text.ParseException
     */
    
    public NewUsers() {
        initComponents();
        
        newUserService = new NewUserService();
        userList = newUserService.getAllNewUsers();
        searchName();

        
        tableModel = (DefaultTableModel)tableUsers.getModel();
        tableModel.setRowCount(0);
        
        for(Object[] row : userList) {
            tableModel.addRow(row);
        }
        
        int year = jYearChooser1.getYear();
 
        int monthCnt[] = newUserService.MakeChart(userList, year);

             
        drawer = new GraphDrawer(monthCnt, 50, 0, 939, 251);

        statistic.setLayout(new BorderLayout());
        statistic.add(drawer, BorderLayout.CENTER);
        statistic.setPreferredSize(drawer.getPreferredSize());
        statistic.setMaximumSize(drawer.getPreferredSize());
        newUserService.filterByName(tableUsers, "");

    }
    
    public void updateTable() {
        userList = newUserService.getAllNewUsers();
        tableModel = (DefaultTableModel) tableUsers.getModel();
        tableModel.setRowCount(0);
        for (Object[] row : userList) {
            tableModel.addRow(row);
        }
        
        statistic.remove(drawer);
        
        int monthCnt[] = newUserService.MakeChart(userList, 2021);

             
        drawer = new GraphDrawer(monthCnt, 50, 0, 939, 251);

        statistic.setLayout(new BorderLayout());
        statistic.add(drawer, BorderLayout.CENTER);
        statistic.setPreferredSize(drawer.getPreferredSize());
        statistic.setMaximumSize(drawer.getPreferredSize());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pageHeader = new javax.swing.JPanel();
        Tittle = new javax.swing.JLabel();
        options = new javax.swing.JPanel();
        Input = new javax.swing.JTextField();
        filterOptions = new javax.swing.JComboBox<>();
        filter = new javax.swing.JLabel();
        startDate = new com.toedter.calendar.JDateChooser();
        connector = new javax.swing.JLabel();
        endDate = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        statisticzone = new javax.swing.JPanel();
        zoneName = new javax.swing.JLabel();
        year = new javax.swing.JLabel();
        jYearChooser1 = new com.toedter.calendar.JYearChooser();
        statistic = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableUsers = new com.btv.Admin.gui.components.TableCustom();

        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(1060, 768));

        pageHeader.setOpaque(false);
        pageHeader.setPreferredSize(new java.awt.Dimension(100, 45));
        pageHeader.setLayout(new java.awt.BorderLayout());

        Tittle.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        Tittle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Tittle.setText("NEW USERS");
        Tittle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pageHeader.add(Tittle, java.awt.BorderLayout.CENTER);

        options.setOpaque(false);

        filterOptions.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Name" }));
        Input.setVisible(false);
        filterOptions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterOptionsActionPerformed(evt);
            }
        });

        filter.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        filter.setText("Filter:");

        startDate.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                startDatePropertyChange(evt);
            }
        });

        connector.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        connector.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        connector.setText("-");

        endDate.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                endDatePropertyChange(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Period of time:");

        javax.swing.GroupLayout optionsLayout = new javax.swing.GroupLayout(options);
        options.setLayout(optionsLayout);
        optionsLayout.setHorizontalGroup(
            optionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsLayout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(connector, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(endDate, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(filter)
                .addGap(18, 18, 18)
                .addComponent(filterOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Input, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(optionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(optionsLayout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(864, Short.MAX_VALUE)))
        );
        optionsLayout.setVerticalGroup(
            optionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(optionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(optionsLayout.createSequentialGroup()
                        .addComponent(endDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 2, Short.MAX_VALUE))
                    .addGroup(optionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(filterOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Input, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                        .addComponent(filter, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(connector, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, optionsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(optionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(optionsLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        statisticzone.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        statisticzone.setOpaque(false);

        zoneName.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        zoneName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        zoneName.setText("STATISTIC");

        year.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        year.setText("Year:");
        year.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jYearChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jYearChooser1PropertyChange(evt);
            }
        });

        javax.swing.GroupLayout statisticLayout = new javax.swing.GroupLayout(statistic);
        statistic.setLayout(statisticLayout);
        statisticLayout.setHorizontalGroup(
            statisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        statisticLayout.setVerticalGroup(
            statisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 160, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout statisticzoneLayout = new javax.swing.GroupLayout(statisticzone);
        statisticzone.setLayout(statisticzoneLayout);
        statisticzoneLayout.setHorizontalGroup(
            statisticzoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statisticzoneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(statisticzoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, statisticzoneLayout.createSequentialGroup()
                        .addGap(0, 444, Short.MAX_VALUE)
                        .addComponent(year)
                        .addGap(18, 18, 18)
                        .addComponent(jYearChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(435, 435, 435))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, statisticzoneLayout.createSequentialGroup()
                        .addGroup(statisticzoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(zoneName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(statistic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        statisticzoneLayout.setVerticalGroup(
            statisticzoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statisticzoneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(zoneName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(statisticzoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jYearChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statistic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(80, Short.MAX_VALUE))
        );

        tableUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Username", "Name", "Time create"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableUsers.setPreferredSize(new java.awt.Dimension(300, 400));
        jScrollPane3.setViewportView(tableUsers);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3)
                    .addComponent(options, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(statisticzone, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pageHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pageHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(statisticzone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void filterOptionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterOptionsActionPerformed
        // TODO add your handling code here:
        JComboBox cb = (JComboBox)evt.getSource();
        String optionChosen = (String)cb.getSelectedItem();
        newUserService.filterByField(tableUsers);
        Input.setText("");
        startDate.setCalendar(null);
        endDate.setCalendar(null);

        if ("None".equals(optionChosen)) {
            Input.setVisible(false);
            // Show all data
        }
        if ("Name".equals(optionChosen)) {
            Input.setVisible(true);
        }

        filterOptions.revalidate();
        filterOptions.repaint();
    }//GEN-LAST:event_filterOptionsActionPerformed

    private void jYearChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jYearChooser1PropertyChange
        // TODO add your handling code here:
        int year = jYearChooser1.getYear();
        statistic.remove(drawer);
        int monthCnt[] = newUserService.MakeChart(userList, year);
        
        drawer = new GraphDrawer(monthCnt, 50, 0, 939, 251);

        statistic.setLayout(new BorderLayout());
        statistic.add(drawer, BorderLayout.CENTER);
        statistic.setPreferredSize(drawer.getPreferredSize());
        statistic.setMaximumSize(drawer.getPreferredSize());
        
        
        statistic.revalidate();
        statistic.repaint();
    }//GEN-LAST:event_jYearChooser1PropertyChange

    private void endDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_endDatePropertyChange
        // TODO add your handling code here:
        Input.setText("");
        endDate.getDateEditor().addPropertyChangeListener(e -> {
        if ("date".equals(e.getPropertyName())){
                if (startDate.getDate() != null){
                    Timer timer = new Timer(500, new ActionListener() {
                        @Override
                        public void actionPerformed(ActionEvent arg0) {
                            newUserService.filterByDate(tableUsers, startDate.getDate(), endDate.getDate());
                        }
                    });
                timer.setRepeats(false); // Set to false to run only once
                timer.start();
                }
            } 
        });
    }//GEN-LAST:event_endDatePropertyChange

    private void startDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_startDatePropertyChange
        // TODO add your handling code here:
        Input.setText("");
    }//GEN-LAST:event_startDatePropertyChange
    
    public void searchName() {
        Input.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                newUserService.filterBySearch(tableUsers, Input.getText(), "Name");
            }

            public void removeUpdate(DocumentEvent e) {
                newUserService.filterBySearch(tableUsers, Input.getText(), "Name");
            }

            public void insertUpdate(DocumentEvent e) {
                newUserService.filterBySearch(tableUsers, Input.getText(), "Name");
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Input;
    private javax.swing.JLabel Tittle;
    private javax.swing.JLabel connector;
    private com.toedter.calendar.JDateChooser endDate;
    private javax.swing.JLabel filter;
    private javax.swing.JComboBox<String> filterOptions;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane3;
    private com.toedter.calendar.JYearChooser jYearChooser1;
    private javax.swing.JPanel options;
    private javax.swing.JPanel pageHeader;
    private com.toedter.calendar.JDateChooser startDate;
    private javax.swing.JPanel statistic;
    private javax.swing.JPanel statisticzone;
    private com.btv.Admin.gui.components.TableCustom tableUsers;
    private javax.swing.JLabel year;
    private javax.swing.JLabel zoneName;
    // End of variables declaration//GEN-END:variables
}
